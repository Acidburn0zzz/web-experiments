/***********
 * Buttons *
 ***********/
$button_size:24px;
$button_corner_radius: 5px;

$button_transition: all 200ms $ease-out-quad;

%button,
.button {
	@at-root %button_basic, & {

		min-height: $button_size;
		min-width: 16px;
		padding: 4px 8px;
		border: 1px solid;
		border-radius: $button_corner_radius;
		transition: $button_transition;
		@include button(normal);

		&:hover {
			@include button(hover);
		}

		&.insensitive {
			@include button(insensitive);
		}

		&.pressed,
		&:active,
		&:checked {
			@include button(active);

			transition-duration: 50ms;
		}

		// button with icon
		&.image-button {
			min-width: $button_size;
			max-height: $button_size;
			padding: 4px;
			>.symbolic {margin: 4px;}
			&.narrow {padding: 4px 0;}
		}

		// text-only button
		&.text-button {
			padding-left: 12px;
			padding-right: 12px;
			line-height: $button_size;
			> span {display: inline-block;}
		}

		// button with icon and text
		&.image-text-button {
			padding: 4px 12px;
			line-height: $button_size;
			.symbolic {vertical-align: middle;margin:0 4px;}
			* {display: inline-block;}
		}
	}

	@at-root %button_selected, & {
		row:selected & {
			@if $variant == 'light' { border-color: $selected_borders_color; }

			&.flat:not(:active):not(:checked):not(:hover):not(disabled) {
				color: $selected_fg_color;
				border-color: transparent;

				&:backdrop { color: if($variant=='light', $backdrop_base_color, $backdrop_fg_color); }
			}
		}
	}

	&.flat,
	&.undecorated {
		background-color: transparent;
		background-image: none;
		border-color: transparent;
		box-shadow: inset 0 1px transparentize(white, 1),0 1px transparentize(white, 1);
		text-shadow: none;
		&:hover {
			@include button(hover);
		}

		&:active,
		&:checked {
			@include button(active);

			transition-duration: 50ms;
		}
	}

	&.circular{
		border-radius: 50%;

		label { padding: 0; }

		$_border_bg: linear-gradient(to top, $alt-borders-color 25%, $borders-color 50%);

		&:not(.flat):not(:checked):not(:active):not(:disabled):not(:backdrop) {
		@include button(normal);
			background-image: $_border_bg;
			border-color: transparent;
		}

		&:hover:not(:checked):not(:active):not(:disabled):not(:backdrop) {
		@include button(hover);
			background-image: $_border_bg;
			border-color: transparent;
		}

		background-origin: padding-box, border-box;
		background-clip: padding-box, border-box;
	}

	// Suggested and Destructive Action buttons
	@each $b_type, $b_color in (suggested-action, $selected_bg_color),
								(destructive-action, $destructive_color) {
	&.#{$b_type} {
		@include button(normal, $b_color, white);

		&.flat {
			@include button(undecorated);

			color: $b_color; //FIXME: does it work on the dark variant?
		}

		&:hover { @include button(hover, $b_color, white); }

		&:active,
		&:checked { @include button(active, $b_color, white); }

		&:backdrop,
		&.flat:backdrop {
			@include button(backdrop, $b_color, white);

			&:active,
			&:checked { @include button(backdrop-active, $b_color, white); }

			&:disabled {
				@include button(backdrop-insensitive);

				&:active,
				&:checked { @include button(backdrop-insensitive-active, $b_color, white); }
			}
		}

		&.flat {
			&:backdrop, &:disabled, &:backdrop:disabled {
				@include button(undecorated);

				color: transparentize($b_color, 0.2);
			}
		}

		&:disabled {
			@include button(insensitive);

			&:active,
			&:checked { @include button(insensitive-active, $b_color, white); }
		}

		.osd & {
			@include button(osd, $b_color);

			&:hover { @include button(osd-hover, $b_color); }

			&:active,
			&:checked { &:backdrop, & { @include button(osd-active, $b_color); }}

			&:disabled { &:backdrop, & { @include button(osd-insensitive, $b_color); }}

			&:backdrop { @include button(osd-backdrop, $b_color); }
		}
	}
	}
}


// Linked Buttons
.linked,
%linked {
	margin: 0;
	padding: 0;

	&.stack-switcher {
		.button {
			width: 80px;
			text-align: center;
		}
	}

	.button {
		position: relative;
		top: 0;
		margin: 0;
		display:inline-block;
		border-radius: 0;
		&.left {
			float:none;
			border-top-left-radius: $button_corner_radius;
			border-bottom-left-radius: $button_corner_radius;
		}

		&.middle {
			float: none;
			border-radius: 0;
			margin-left: 0;
			margin-right: 0;
			border-left-style: none;
			// border-right-style: none;
		}

		&.right {
			float:none;
			border-top-right-radius: $button_corner_radius;
			border-bottom-right-radius: $button_corner_radius;
			border-left-style: none;
			border-right-style: solid;
		}

	}
}

// aka dropdowns
select {
	@extend %button;
	border: none;
	outline: none;
	-webkit-appearance: none;
	padding: 0;

	option {
		@extend %text;
	}
}